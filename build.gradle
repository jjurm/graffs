buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'org.jetbrains.kotlin.jvm' version '1.3.60'
    id 'application'
    id 'com.palantir.git-version' version '0.12.2'
    id 'org.jetbrains.dokka' version '0.10.0'
    id "org.jetbrains.kotlin.kapt" version "1.3.60"
    id "org.jetbrains.kotlin.plugin.jpa" version "1.3.60"
    id "org.jetbrains.kotlin.plugin.noarg" version "1.3.60"
    id 'de.fuerstenau.buildconfig' version '1.1.8'
}

group 'uk.ac.cam.jm2186'
version '1.0-SNAPSHOT-' + gitVersion()

mainClassName = "uk.ac.cam.jm2186.graffs.cli.GraffsKt"

buildConfig {
    buildConfigField 'java.time.Instant', 'BUILD_DATE', 'java.time.Instant.ofEpochMilli(' + System.currentTimeMillis() + 'L)'
}

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
    zip64 true
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    doLast {
        copy {
            from jar
            into 'build/libs'
            rename { String filename -> "${archivesBaseName}-last.jar" }
        }
    }
}

def serverName = "rio"
def jarDir = "~/scratch/jars"

task jarUpload(dependsOn: jar) {
    doLast {
        exec {
            commandLine "scp", "${buildDir}/libs/${archivesBaseName}-${version}.jar", "${serverName}:${jarDir}/${archivesBaseName}-${version}.jar"
        }
        exec {
            //commandLine "ssh", serverName, "echo 'spark-submit ${jarDir}/${archivesBaseName}-${version}.jar \$@' > ~/scratch/${archivesBaseName} ; chmod u+x ~/scratch/${archivesBaseName}"
            commandLine "ssh", serverName, "echo 'java -jar ${jarDir}/${archivesBaseName}-${version}.jar \$@' > ~/scratch/${archivesBaseName} ; chmod u+x ~/scratch/${archivesBaseName} ; _GRAFFS_COMPLETE=bash graffs > ./graffs-completion.sh"
        }
    }
}

/*task sparkSubmit(type: Exec, dependsOn: jarUpload) {
    commandLine "ssh", serverName, "spark-submit --deploy-mode client ${jarDir}/${archivesBaseName}-${version}.jar"
}*/

test {
    useJUnitPlatform()
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"

    configuration {
        jdkVersion = 8
    }
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.61"
    testImplementation "org.junit.jupiter:junit-jupiter:5.5.2"

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-collections4
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'

    // https://mvnrepository.com/artifact/log4j/log4j
    implementation group: 'log4j', name: 'log4j', version: '1.2.17'

    // https://mvnrepository.com/artifact/org.graphstream/gs-core
    implementation group: 'org.graphstream', name: 'gs-core', version: '1.3'
    // https://mvnrepository.com/artifact/org.graphstream/gs-algo
    implementation group: 'org.graphstream', name: 'gs-algo', version: '1.3'
    // https://mvnrepository.com/artifact/org.graphstream/gs-ui
    implementation group: 'org.graphstream', name: 'gs-ui', version: '1.3'

    // https://mvnrepository.com/artifact/org.apache.spark/spark-core
    //compile group: 'org.apache.spark', name: 'spark-core_2.11', version: '2.4.4'
    // https://mvnrepository.com/artifact/org.apache.spark/spark-sql
    //compileOnly group: 'org.apache.spark', name: 'spark-sql_2.11', version: '2.4.4'
    //compile group: 'org.apache.spark', name: 'spark-sql_2.11', version: '2.4.4'
    // https://mvnrepository.com/artifact/org.scala-lang/scala-library
    //compile group: 'org.scala-lang', name: 'scala-library', version: '2.11.12'

    // https://mvnrepository.com/artifact/org.jetbrains.kotlinx/kotlinx-coroutines-core
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.3.3'

    // Hibernate
    implementation group: 'org.hibernate', name: 'hibernate-core', version: '5.4.9.Final'
    //compileOnly 'org.hibernate:hibernate-jpamodelgen:5.4.9.Final'
    kapt 'org.hibernate:hibernate-jpamodelgen:5.4.9.Final'
    kaptTest 'org.hibernate:hibernate-jpamodelgen:5.4.9.Final'
    // https://mvnrepository.com/artifact/org.hibernate/hibernate-c3p0
    implementation group: 'org.hibernate', name: 'hibernate-c3p0', version: '5.4.11.Final'

    // H2 database
    // https://mvnrepository.com/artifact/com.h2database/h2
    implementation group: 'com.h2database', name: 'h2', version: '1.4.200'

    // Click
    // https://mvnrepository.com/artifact/com.github.ajalt/clikt
    implementation group: 'com.github.ajalt', name: 'clikt', version: '2.5.0'
}

noArg {
    annotation("javax.persistence.Entity")
    annotation("javax.persistence.Embeddable")
    annotation("javax.persistence.MappedSuperclass")
    annotation("uk.ac.cam.jm2186.graffs.storage.IdClassEntity")
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions {
        freeCompilerArgs = ["-XXLanguage:+InlineClasses"]
    }
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
