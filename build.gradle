buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'org.jetbrains.kotlin.jvm' version '1.3.60'
    id 'application'
    id 'com.palantir.git-version' version '0.12.2'
    id 'org.jetbrains.dokka' version '0.10.0'
    id "org.jetbrains.kotlin.kapt" version "1.3.60"
    id "org.jetbrains.kotlin.plugin.jpa" version "1.3.60"
    id "org.jetbrains.kotlin.plugin.noarg" version "1.3.60"
    id 'de.fuerstenau.buildconfig' version '1.1.8'
}

group 'uk.ac.cam.jm2186'
version '1.0-SNAPSHOT-' + gitVersion()

mainClassName = "uk.ac.cam.jm2186.partii.cli.ControllerKt"

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
    zip64 true
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
}

def remoteWorkingDir = "/local/scratch/jm2186/partii-jars"

task jarUpload(type: Exec, dependsOn: jar) {
    commandLine "scp", "${buildDir}/libs/${archivesBaseName}-${version}.jar", "yellow:${remoteWorkingDir}"
}

task sparkSubmit(type: Exec, dependsOn: jarUpload) {
    commandLine "ssh", "yellow", "~/spark-2.4.4-bin-hadoop2.7/bin/spark-submit --deploy-mode client ${remoteWorkingDir}/${archivesBaseName}-${version}.jar"
}

test {
    useJUnitPlatform()
}

dokka {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/dokka"
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testImplementation "org.junit.jupiter:junit-jupiter:5.5.2"

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'

    // https://mvnrepository.com/artifact/org.graphstream/gs-core
    compile group: 'org.graphstream', name: 'gs-core', version: '1.3'
    // https://mvnrepository.com/artifact/org.graphstream/gs-algo
    compile group: 'org.graphstream', name: 'gs-algo', version: '1.3'
    // https://mvnrepository.com/artifact/org.graphstream/gs-ui
    compile group: 'org.graphstream', name: 'gs-ui', version: '1.3'

    // https://mvnrepository.com/artifact/org.apache.spark/spark-sql
    compileOnly group: 'org.apache.spark', name: 'spark-sql_2.11', version: '2.4.4'

    // Hibernate
    compile group: 'org.hibernate', name: 'hibernate-core', version: '5.4.9.Final'
    //compileOnly 'org.hibernate:hibernate-jpamodelgen:5.4.9.Final'
    kapt 'org.hibernate:hibernate-jpamodelgen:5.4.9.Final'
    kaptTest 'org.hibernate:hibernate-jpamodelgen:5.4.9.Final'

    // H2 database
    // https://mvnrepository.com/artifact/com.h2database/h2
    compile group: 'com.h2database', name: 'h2', version: '1.4.200'

    // Click
    // https://mvnrepository.com/artifact/com.github.ajalt/clikt
    compile group: 'com.github.ajalt', name: 'clikt', version: '2.3.0'
}

noArg {
    annotation("javax.persistence.Entity")
    annotation("javax.persistence.Embeddable")
    annotation("javax.persistence.MappedSuperclass")
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
